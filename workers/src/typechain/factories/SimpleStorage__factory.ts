/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SimpleStorage, SimpleStorageInterface } from "../SimpleStorage";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "category",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "get",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_refTimestamp",
        type: "uint256",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_category",
        type: "string",
      },
    ],
    name: "setCategory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052607b6000819055506040518060400160405280600581526020017f74657374310000000000000000000000000000000000000000000000000000008152506002908051906020019061005792919061005d565b50610108565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261009357600085556100da565b82601f106100ac57805160ff19168380011785556100da565b828001600101855582156100da579182015b828111156100d95782518255916020019190600101906100be565b5b5090506100e791906100eb565b5090565b5b808211156101045760008160009055506001016100ec565b5090565b610a65806101176000396000f3fe6080604052600436106100865760003560e01c80636d4ce63c116100595780636d4ce63c14610130578063b60d42881461015b578063c1a28b3814610165578063cf9efb8b1461022d578063ef430aa61461025857610086565b8063188ec3561461008b5780631a39d8ef146100b65780631ab06ee5146100e1578063590e1ae314610119575b600080fd5b34801561009757600080fd5b506100a06102e8565b6040518082815260200191505060405180910390f35b3480156100c257600080fd5b506100cb6102f0565b6040518082815260200191505060405180910390f35b610117600480360360408110156100f757600080fd5b8101908080359060200190929190803590602001909291905050506102f6565b005b34801561012557600080fd5b5061012e610360565b005b34801561013c57600080fd5b50610145610471565b6040518082815260200191505060405180910390f35b61016361047a565b005b34801561017157600080fd5b5061022b6004803603602081101561018857600080fd5b81019080803590602001906401000000008111156101a557600080fd5b8201836020820111156101b757600080fd5b803590602001918460018302840111640100000000831117156101d957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610526565b005b34801561023957600080fd5b50610242610881565b6040518082815260200191505060405180910390f35b34801561026457600080fd5b5061026d610887565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102ad578082015181840152602081019050610292565b50505050905090810190601f1680156102da5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b600042905090565b60035481565b42811161034e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b8152602001806109d1603b913960400191505060405180910390fd5b81600081905550806001819055505050565b6000600354905060006003819055506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260405180600001905060006040518083038185875af1925050503d80600081146103f1576040519150601f19603f3d011682016040523d82523d6000602084013e6103f6565b606091505b505090508061046d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4661696c656420746f2073656e6420616d6f756e742e0000000000000000000081525060200191505060405180910390fd5b5050565b60008054905090565b600034116104d3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610a0c6024913960400191505060405180910390fd5b3460036000828254019250508190555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b42600154111561059e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4f6e6c7920657870697265642e0000000000000000000000000000000000000081525060200191505060405180910390fd5b73__$03536fd10dbb8a170600640c424d9e3a97$__63bed34bba826040518263ffffffff1660e01b8152600401808060200180602001838103835284818151815260200191508051906020019080838360005b8381101561060c5780820151818401526020810190506105f1565b50505050905090810190601f1680156106395780820380516001836020036101000a031916815260200191505b50838103825260058152602001807f7465737431000000000000000000000000000000000000000000000000000000815250602001935050505060206040518083038186803b15801561068b57600080fd5b505af415801561069f573d6000803e3d6000fd5b505050506040513d60208110156106b557600080fd5b8101908080519060200190929190505050806107f5575073__$03536fd10dbb8a170600640c424d9e3a97$__63bed34bba826040518263ffffffff1660e01b8152600401808060200180602001838103835284818151815260200191508051906020019080838360005b8381101561073a57808201518184015260208101905061071f565b50505050905090810190601f1680156107675780820380516001836020036101000a031916815260200191505b50838103825260058152602001807f7465737432000000000000000000000000000000000000000000000000000000815250602001935050505060206040518083038186803b1580156107b957600080fd5b505af41580156107cd573d6000803e3d6000fd5b505050506040513d60208110156107e357600080fd5b81019080805190602001909291905050505b610867576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260048152602001807f746573740000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b806002908051906020019061087d929190610925565b5050565b60015481565b60028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561091d5780601f106108f25761010080835404028352916020019161091d565b820191906000526020600020905b81548152906001019060200180831161090057829003601f168201915b505050505081565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261095b57600085556109a2565b82601f1061097457805160ff19168380011785556109a2565b828001600101855582156109a2579182015b828111156109a1578251825591602001919060010190610986565b5b5090506109af91906109b3565b5090565b5b808211156109cc5760008160009055506001016109b4565b509056fe5265666572656e63652074696d657374616d70206d7573742062652067726561746572207468616e2063757272656e742074696d657374616d702e436f6e747269627574696f6e206d7573742062652067726561746572207468616e20302ea26469706673582212206896d04237edbc6faecf15187d6bb7352e7a7522b80157cfe73ab3d9c830876f64736f6c63430007060033";

export class SimpleStorage__factory extends ContractFactory {
  constructor(
    linkLibraryAddresses: SimpleStorageLibraryAddresses,
    signer?: Signer
  ) {
    super(
      _abi,
      SimpleStorage__factory.linkBytecode(linkLibraryAddresses),
      signer
    );
  }

  static linkBytecode(
    linkLibraryAddresses: SimpleStorageLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$03536fd10dbb8a170600640c424d9e3a97\\$__", "g"),
      linkLibraryAddresses["src/Utils.sol:Utils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<SimpleStorage> {
    return super.deploy(overrides || {}) as Promise<SimpleStorage>;
  }
  getDeployTransaction(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SimpleStorage {
    return super.attach(address) as SimpleStorage;
  }
  connect(signer: Signer): SimpleStorage__factory {
    return super.connect(signer) as SimpleStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleStorageInterface {
    return new utils.Interface(_abi) as SimpleStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleStorage {
    return new Contract(address, _abi, signerOrProvider) as SimpleStorage;
  }
}

export interface SimpleStorageLibraryAddresses {
  ["src/Utils.sol:Utils"]: string;
}
